name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # 1) Checkout code
      - uses: actions/checkout@v3

      # 2) Generate .env.dev
      - name: Create .env.dev
        run: |
          echo "FLASK_APP=project/__init__.py"       > .env.dev
          echo "FLASK_DEBUG=1"                      >> .env.dev
          echo "DATABASE_URL=postgresql://hello_flask:hello_flask@db:5432/hello_flask_dev" >> .env.dev
          echo "SQL_HOST=db"                        >> .env.dev
          echo "SQL_PORT=5432"                      >> .env.dev
          echo "DATABASE=postgres"                  >> .env.dev
          echo "APP_FOLDER=/usr/src/app"            >> .env.dev

      # 3) Build images & start db + web
      - name: Build and start services
        run: |
          docker compose build web
          docker compose up -d db web
          sleep 15
          docker compose ps

      # 4) Seed a tiny test table
      - name: Seed test data
        run: |
          docker compose exec -T db psql \
            -U hello_flask \
            -d hello_flask_dev \
            -c "CREATE TABLE IF NOT EXISTS test (id INT PRIMARY KEY, name TEXT);
                INSERT INTO test VALUES (1,'Alice'),(2,'Bob');"

      # 5) Verify the seed worked
      - name: Verify test data
        run: |
          docker compose exec -T db psql \
            -U hello_flask \
            -d hello_flask_dev \
            -t -A \
            -c "SELECT COUNT(*) FROM test;" \
          | grep -q "^2$"

      # 6) Smoke-test the web endpoint
      - name: Smoke test web
        run: |
          curl --fail http://localhost:2233/ || (echo "Web failed" && exit 1)

      # 7) Tear everything down
      - name: Tear down
        if: always()
        run: docker compose down --volumes --remove-orphans
